name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Cache
      uses: actions/cache@v3
      id: cache-build
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target_cache/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock','submodules/*') }}
    - if: steps.cache-build.cache-hit != 'true'
      name: Build Sapio Deps (builds most deps)
      run: |
        cargo build --manifest-path submodule/sapio/Cargo.toml --target-dir target_cache --lib
        cargo fetch --target-dir target_cache
        cp -r target_cache target
    - if: steps.cache-build.cache-hit == 'true'
      name: Copy Sapio Deps
      run: |
        cp -r target_cache target
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
